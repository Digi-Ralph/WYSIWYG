{"version":3,"sources":["index.js"],"names":["h2","document","querySelector","containertitle","titleLayout","input","e","nextSpan","firstElementChild","tagName","title","innerText","length","remove","a","insertAdjacentHTML","stopDefault","x","valueOf","key","preventDefault","blockCretChange","focus","getCaretCoordinates","y","width","window","getSelection","selection","rangeCount","rect","getRangeAt","cloneRange","getClientRects","left","top","toggleTooltip","tooltip","getElementById","toString","scrollTop","undefined","pageYOffset","documentElement","body","parentNode","setAttribute","addEventListener"],"mappings":"AAAA,MAAAA,GAAAC,SAAAC,cAAA,MACAC,eAAAF,SAAAC,cAAA,oBACAE,YAAAH,SAAAC,cAAA,iBAGAG,MAAAC,IACA,MAAAC,EAAAP,GAAAQ,kBAAAC,QACAC,EAAAV,GAAAW,UAAAC,OACA,GAAA,IAAAF,EAIAA,EAAA,GAAA,SAAAH,GACAP,GAAAQ,kBAAAK,aALA,CACA,MAAAC,EAAA,gEACAV,YAAAW,mBAAA,aAAAD,KASAE,YAAAV,IACA,MAAAW,EAAAjB,GAAAW,UAAAO,UAAAN,QACA,aAAAN,EAAAa,KAAA,UAAAb,EAAAa,MAAAF,EAAA,GACAX,EAAAc,kBAKAC,gBAAAf,IACA,UAAAA,EAAAa,KAEAlB,SAAAC,cAAA,cAAAoB,SAYA,SAAAC,sBACA,IAAAN,EAAA,EACAO,EAAA,EACAC,MAAA,EAEA,QADA,IAAAC,OAAAC,aACA,CACA,MAAAC,EAAAF,OAAAC,eAEA,GAAA,IAAAC,EAAAC,WAAA,CAEA,MAIAC,EAJAF,EAAAG,WAAA,GAAAC,aAIAC,iBAAA,GAGAH,IACAb,EAAAa,EAAAI,KACAV,EAAAM,EAAAK,IACAV,MAAAK,EAAAL,QAIA,MAAA,CACAR,EAAAA,EACAO,EAAAA,EACAC,MAAAA,OAOA,SAAAW,gBACA,MAAAC,EAAApC,SAAAqC,eAAA,WAEA,GADAZ,OAAAC,eAAAY,WAAA3B,OACA,EAAA,CACA,IAAA4B,OACAC,IAAAf,OAAAgB,YAAAhB,OAAAgB,aACAzC,SAAA0C,iBAAA1C,SAAA2C,KAAAC,YAAA5C,SAAA2C,MAAAJ,UACA,MAAAvB,EACAA,EAAAO,EACAA,EAAAC,MACAA,GACAF,sBACAc,EAAAS,aAAA,cAAA,SACAT,EAAAS,aACA,QACA,6CACA7B,EAAAQ,EAAA,EAAA,4BACAD,EAAAgB,EAAA,4BAIAH,EAAAS,aAAA,cAAA,QACAT,EAAAS,aAAA,QAAA,kBA9DA3C,eAAA4C,iBAAA,QAAA1C,OACAF,eAAA4C,iBAAA,UAAA/B,aACAb,eAAA4C,iBAAA,UAAA1B,iBAgEApB,SAAA8C,iBAAA,WAAAzC,GAAA8B","file":"index.js","sourcesContent":["const h2 = document.querySelector('h1')\r\nconst containertitle = document.querySelector('.title-container')\r\nconst titleLayout = document.querySelector('.layout-title')\r\n\r\n\r\nconst input = e => {\r\n    const nextSpan = h2.firstElementChild.tagName\r\n    const title = h2.innerText.length\r\n    if (title === 1) {\r\n        const a = `<span class=\"placeholder-title\" placeholder = \"Title\"></span>`\r\n        titleLayout.insertAdjacentHTML('afterbegin', a)\r\n        return\r\n    } else if (title > 1 && nextSpan === \"SPAN\") {\r\n        h2.firstElementChild.remove()\r\n        return\r\n    }\r\n\r\n}\r\n\r\nconst stopDefault = e => {\r\n    const x = h2.innerText.valueOf().length\r\n    if ((e.key == 'Backspace' || e.key == \"Delete\") && x < 2 ) {\r\n        e.preventDefault()\r\n    }\r\n\r\n}\r\n\r\nconst blockCretChange = (e) => {\r\n    if (e.key === 'Enter') {\r\n     \r\n       document.querySelector('#block_one').focus()\r\n    \r\n    \r\n        // console.log(p)\r\n    }\r\n}\r\ncontainertitle.addEventListener('input', input)\r\ncontainertitle.addEventListener('keydown', stopDefault)\r\ncontainertitle.addEventListener('keydown', blockCretChange)\r\n\r\n\r\n//\r\nfunction getCaretCoordinates() {\r\n    let x = 0,\r\n        y = 0;\r\n        width = 0;\r\n    const isSupported = typeof window.getSelection !== \"undefined\";\r\n    if (isSupported) {\r\n        const selection = window.getSelection();\r\n        // Check if there is a selection (i.e. cursor in place)\r\n        if (selection.rangeCount !== 0) {\r\n            // Clone the range\r\n            const range = selection.getRangeAt(0).cloneRange();\r\n            // Collapse the range to the start, so there are not multiple chars selected\r\n            // range.collapse(true);\r\n            // getCientRects returns all the positioning information we need\r\n            const rect = range.getClientRects()[0];\r\n            // console.log(rect)\r\n            // const rect = range.getBoundingClientRect();\r\n            if (rect) {\r\n                x = rect.left; // since the caret is only 1px wide, left == right\r\n                y = rect.top; // top edge of the caret\r\n                width = rect.width\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        x,\r\n        y,\r\n        width\r\n    };\r\n\r\n}\r\n\r\n\r\n\r\nfunction toggleTooltip() {\r\n    const tooltip = document.getElementById(\"tooltip\");\r\n    const stringLength = window.getSelection().toString().length\r\n    if (stringLength > 0) {\r\n        let scrollTop = \r\n        (window.pageYOffset !== undefined) ? window.pageYOffset : \r\n        (document.documentElement || document.body.parentNode || document.body).scrollTop;\r\n            const {\r\n            x,\r\n            y,\r\n            width\r\n        } = getCaretCoordinates();\r\n        tooltip.setAttribute(\"aria-hidden\", \"false\");\r\n        tooltip.setAttribute(\r\n            \"style\",\r\n            `display: inline-block; \r\n            left:${(x + (width / 2)) - 32}px; \r\n            top: ${(y + scrollTop) - 36}px;\r\n            `\r\n            );\r\n        } else {\r\n            tooltip.setAttribute(\"aria-hidden\", \"true\");\r\n            tooltip.setAttribute(\"style\", \"display: none;\");\r\n        }\r\n}\r\n\r\ndocument.addEventListener(\"mouseup\", (e) => toggleTooltip());\r\n\r\n"]}